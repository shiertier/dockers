name: Publish Docker image

on:
  push:
    branches:
      - '**'

jobs:
  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract CUDA version from Dockerfile
        id: extract_cuda_version
        run: |
          CUDA_VERSION=$(grep -oP '(?<=FROM shiertier/cuda-py:).*' Dockerfile)
          echo "::set-output name=cudavision::$CUDA_VERSION"

      - name: Extract Miniconda version from Dockerfile
        id: extract_miniconda_version
        run: |
          PYTORCH_VERSION=$(grep -oP '(?<=RUN python -m pip install paddlepaddle-gpu==)[^.post]+' Dockerfile)
          echo "::set-output name=tag::$PYTORCH_VERSION"
          
      - name: Clean up /opt directory
        run: |
          cd /opt
          find . -maxdepth 1 -mindepth 1 '!' -path ./containerd '!' -path ./actionarchivecache '!' -path ./runner '!' -path ./runner-cache -exec rm -rf '{}' ';'

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: shiertier/paddle:paddle${{ steps.extract_miniconda_version.outputs.tag }}-${{ steps.extract_cuda_version.outputs.cudavision }}
